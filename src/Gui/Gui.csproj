<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
    <GenerateBindingRedirectsOutputType>true</GenerateBindingRedirectsOutputType>
    <RootNamespace>Reko.Gui</RootNamespace>
    <AssemblyName>Reko.Gui</AssemblyName>
  </PropertyGroup>
  <!-- 
      The file CmdIds.cs is generated from decompiler-menus.xml and is not committed to the
      source code repository. On a clean install, CmdIds.cs will be missing. We do want to
      include it in the build, so we use the hack below to force it to be included if it is
      not present. 
  -->
  <ItemGroup>
    <Compile Include="CmdIds.cs" Condition="!Exists('CmdIds.cs')" />
  </ItemGroup>
  <ItemGroup>
    <None Remove=".gitignore" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Core\Core.csproj" />
    <ProjectReference Include="..\Decompiler\Decompiler.csproj" />
    <ProjectReference Include="..\tools\xslt\xslt.csproj" />
  </ItemGroup>
  <Target Name="GenerateCsFiles" BeforeTargets="CoreCompile">
    <Message Importance="high" Text="Generating C# files for Gui.csproj" />
    <Message Importance="high" Text="xslt.exe exists" Condition="Exists('$(ProjectDir)../tools/xslt.exe')" />
    <!--
        It seems we can't rely on xslt.exe / xslt.dll (net472 or netcoreapp20)
        have been built, despite all efforts to express this in the SLN file.
        Thanks, build system.
    -->
    <Msbuild Projects="$(ProjectDir)..\tools\xslt\xslt.csproj" Properties="Configuration=$(Configuration)" />
    <Exec Condition=" '$(OS)' != 'Unix' And Exists('$(ProjectDir)../tools/xslt.exe') " Command="&quot;$(ProjectDir)..\tools\xslt.exe&quot; &quot;$(ProjectDir)cmdids.xslt&quot; &quot;$(ProjectDir)decompiler-menus.xml&quot; &quot;$(ProjectDir)CmdIds.cs&quot;" />
    <Exec Condition=" '$(OS)' == 'Unix' And Exists('$(ProjectDir)../tools/xslt.dll') " Command="mono $(ProjectDir)../tools/xslt.dll $(ProjectDir)cmdids.xslt $(ProjectDir)decompiler-menus.xml $(ProjectDir)CmdIds.cs" />
  </Target>
</Project>
